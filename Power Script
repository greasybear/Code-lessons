using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.UI;


public class PowerTester : MonoBehaviour
{

    public float playerPowerRange;

    int abilityCycle = 1;

    int skellerMask = 1 << 10;
    int humanMask = 1 << 12;

    public Text powerName;

    void RandomSelect()
    {
        Collider[] enemiesInRange = Physics.OverlapSphere(transform.position, playerPowerRange, skellerMask);

        randomGuy = enemiesInRange[0].transform.GetComponent<Character>();
    }

    public Character randomGuy;
    
    void MakeBig()
    {
        randomGuy.gameObject.transform.localScale = Vector3.Lerp(randomGuy.gameObject.transform.localScale, new Vector3(4, 4, 4), lerpTimer); 
    }

    public bool pullBool = false;
    public bool bigBool = false;
    public bool pushBool = false;
    public bool smallBool = false;
    public bool moveBool = false;
    public float lerpTimer;
    void Update()
    {

        if (abilityCycle == 7)
        {
            abilityCycle = 1;
        }

        if (Input.GetKeyDown(KeyCode.L))
        {
            abilityCycle += 1;

        }

        if (Input.GetKeyDown(KeyCode.G) && abilityCycle == 1)
        {
            lerpTimer = 0;
            RandomSelect();
            bigBool = true;

        }

        if (bigBool)
        {
            MakeBig();
        }

        if( lerpTimer >= 1)
        {
            bigBool = false;
        }

        if (Input.GetKeyDown(KeyCode.G) && abilityCycle == 2)
        {
            lerpTimer = 0;
            smallBool = true;
        }

        if(smallBool)
        { MakeSmall(); }

        if (smallBool && lerpTimer >= 1)
        { smallBool = false; }

        lerpTimer += Time.deltaTime;

        if (Input.GetKeyDown(KeyCode.G) && abilityCycle == 3)
        {
            lerpTimer = 0;
            pullBool = true;
        }

        if (pullBool)
        { PullBaddies(); }

        if (lerpTimer >= .5f && pullBool)
        { pullBool = false; }

        if (Input.GetKeyDown(KeyCode.G) && abilityCycle == 4)
        {
            lerpTimer = 0;
            pushBool = true;
        }

        if(pushBool)
        { PushBack(); }

        if(lerpTimer >= .5f && pushBool)
        { pushBool = false; }


        if (Input.GetKeyDown(KeyCode.G) && abilityCycle == 5)
        {
            lerpTimer = 0;
            moveBool = true;
        }

        if (moveBool)
        { LockMovement(); }

        if (moveBool && lerpTimer > 5)
        { moveBool = false; }


        if (Input.GetKeyDown(KeyCode.G) && abilityCycle == 6)
        { Lightning(); }

        if (abilityCycle == 1)
        { powerName.text = "Make'em Big"; }
        if (abilityCycle == 2)
        { powerName.text = "Make'em Small"; }
        if (abilityCycle == 3)
        { powerName.text = "Pull 'em"; }
        if (abilityCycle == 4)
        { powerName.text = "Push 'em"; }
        if (abilityCycle == 5)
        { powerName.text = "Lock 'em"; }
        if (abilityCycle == 6)
        { powerName.text = "Lightening"; }

    }

    void MakeSmall()
    {
        Collider[] enemiesInRange = Physics.OverlapSphere(transform.position, playerPowerRange, humanMask);

        foreach (Collider badguy in enemiesInRange)
        {
            badguy.transform.localScale = Vector3.Lerp(badguy.transform.localScale, new Vector3(.5f, .5f, .5f), lerpTimer);
        }

    }
    

    void PullBaddies()
    {
        Collider[] enemiesInRange = Physics.OverlapSphere(transform.position, playerPowerRange, humanMask);

        foreach (Collider badguy in enemiesInRange)
        {
            badguy.transform.position = Vector3.MoveTowards(badguy.transform.position, gameObject.transform.position, lerpTimer);
        }
    }

    void PushBack()
    {
        Collider[] enemiesInRange = Physics.OverlapSphere(transform.position, playerPowerRange, humanMask);

        foreach (Collider badguy in enemiesInRange)
        {
            badguy.transform.position = new Vector3(badguy.transform.position.x, 0, badguy.transform.position.z);
            badguy.transform.position = Vector3.MoveTowards(badguy.transform.position, gameObject.transform.position, lerpTimer * -1);
        }

    }

    void LockMovement()
    {
        Collider[] enemiesInRange = Physics.OverlapSphere(transform.position, playerPowerRange, humanMask);

        foreach (Collider badguy in enemiesInRange)
        {
            badguy.transform.position = new Vector3(badguy.transform.position.x, badguy.transform.position.y, badguy.transform.position.z);
        }

    }

    public float lightDamage;
    public GameObject lightningParticle;

    void Lightning()
    {
        Collider[] enemiesInRange = Physics.OverlapSphere(transform.position, playerPowerRange, humanMask);

        foreach (Collider badguy in enemiesInRange)
        {
            GameObject damageParticle = Instantiate(lightningParticle, new Vector3(badguy.transform.position.x,
                badguy.transform.position.y + 4, badguy.transform.position.z), Quaternion.identity);
            badguy.GetComponent<Human>().TakeDamage(lightDamage);
        }

    }

}
